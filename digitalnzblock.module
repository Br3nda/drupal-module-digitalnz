<?php
// $Id: digitalnzblock.module,v 1.1 2010/02/07 03:53:02 jonathanhunt Exp $
/**
 * @file
 * Display search results from DigitalNZ API http://digitalnz.org in block,
 * intended to be displayed beside normal Drupal search results.
 *
 * This module sponsored by the Ministry of Culture and Heritage.
 *
 * @author digitalnzblock.module@huntdesign.co.nz
 *
 * Normally this block would be configured to appear on search/* paths only.
 *
 * @todo:
 * - resolve potential conflict between # of results for block vs digitalnzsearch module
 * - consider caching, esp. for additional pages of same search keys.
 */

/**
 * Implementation of hook_theme().
 */
function digitalnzblock_theme() {
  return array(
    'digitalnzblock_results' => array(
      'function' => 'theme_digitalnzblock_results',
    ),
  );
}

/**
 * Implementation of hook_block().
 */
function digitalnzblock_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $blocks['digitalnz_results']['info'] = t('DigitalNZ: Results');
      $blocks['digitalnz_results']['cache'] = BLOCK_NO_CACHE;
      return $blocks;
      break;

    case 'configure':
      $form['digitalnz_block_num_thumbnails'] = array(
        '#type' => 'select',
        '#title' => t('Number of thumbnails to display'),
        '#default_value' => variable_get('digitalnz_block_num_thumbnails', 2),
        '#options' => range(0, 10),
      );

      $form['digitalnz_block_num_results'] = array(
        '#type' => 'select',
        '#title' => t('Total number of results to display'),
        '#default_value' => variable_get('digitalnz_block_num_results', 7),
        '#options' => range(0, 10),
        '#description' => t('Includes thumbnails as specified above.'),
      );
      return $form;

    // Save results of configuration form.
    case 'save':
      variable_set('digitalnz_block_num_thumbnails', (int)$edit['digitalnz_block_num_thumbnails']);
      variable_set('digitalnz_block_num_results', (int)$edit['digitalnz_block_num_results']);
      break;

    case 'view':
      $block = array();
      // Only generate block if we have some content to show.
      $content = digitalnzblock_content();
      if (!empty($content)) {
        $block['subject'] = t('Results from DigitalNZ');
        $block['content'] = $content;
        return $block;
      }
      break;
  }
}

/**
 * Generate content based on current search or page title.
 * @param $keys Search text
 */
function digitalnzblock_content($keys = '') {
  $output = '';

  // If no search keys provided, try and get them from path.
  if (empty($keys)) {
    if (arg(0) == 'search' && arg(1) == 'node') {
      $keys = arg(2);
    }
  }
  // We have something to search on?
  if (!empty($keys)) {
    // @todo: check cache?
    $rows = variable_get('digitalnz_block_num_results', 5);
    $xml = digitalnzapi_do_search($keys, 0, $rows);

    $results = digitalnzapi_results($xml);

    // Did we get a useful response?
    if (digitalnz_has_searched()) {
      $output = theme('digitalnzblock_results', $results, $keys);
    }
  }

  return $output;
}

/**
 * Theme results from DigitalNZ as a list thumbnails, followed by a list of other results.
 * Thumbnails and other results both have a 'more' link following them.
 */
function theme_digitalnzblock_results($results, $keys) {
  drupal_add_css(drupal_get_path('module', 'digitalnzblock') .'/digitalnzblock.css');

  $output = '';
  $num_images = variable_get('digitalnz_block_num_thumbnails', 2);

  if (count($results) > 0) {
    $images = array();
    $items = array();

    // Iterate through results, splitting images out into separate list.
    foreach ($results as $result) {
      if ($result['type'] == 'Images' && !empty($result['node']['thumbnail-url']) && $num_images > 0) {
        $title = $result['title'] .' - '. $result['extra']['provider'];
        // Force variable size thumbnails into a more useful size. Could use imagecache here.
        $attributes = array('height' => 85, 'width' => 85);
        $image = theme('image', $result['node']['thumbnail-url'], $title, $title, $attributes, FALSE);
        $item = l(
          $image,
          $result['node']['source-url'],
          array('html' => TRUE, 'attributes' => array('title' => $title))
        );
        $images[] = $item;
        $num_images--;
      }
      else {
        $items[] = t('!title - !content_provider', array(
          '!title' => l($result['title'], $result['link']),
          '!content_provider' => $result['extra']['provider'],
        ));
      }
    }

    if (count($images)) {
      $output .= theme('item_list', $images, NULL, 'ul', array('class' => 'digitalnz-images'));
      $more_images_url = DIGITALNZ_SEARCH_URL .'?search_text='. urlencode($keys .' AND category:Images');
      $output .= '<p>'. l('More images >', $more_images_url) .'</p>';
    }

    if (count($items)) {
      $output .= theme('item_list', $items, NULL, 'ul', array('class' => 'digitalnz-results'));
      $more_results_url = DIGITALNZ_SEARCH_URL .'?search_text='. urlencode($keys);
      $output .= '<p>'. l('More results >', $more_results_url) .'</p>';
    }
  }
  else {
    $output = t('No results for %keys', array('%keys' => $keys));
  }

  return $output;
}
